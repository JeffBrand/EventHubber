<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EventHubber"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Converters="clr-namespace:EventHubber.Converters" x:Class="EventHubber.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800">
    <Window.Resources>
        <Converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <DataTemplate x:Key="PartitionTemplate">
            <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                <Grid HorizontalAlignment="Stretch" Height="50" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="12*"/>
                        <RowDefinition Height="13*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding PartitionId}" VerticalAlignment="Center" FontSize="18.667"  />
                    <TextBlock  VerticalAlignment="Center" FontSize="18.667" Grid.Row="1" ><Run Text="Message Count: "/><Run Text="{Binding MessageCount}"/></TextBlock>

                </Grid>
            </Border>
        </DataTemplate>
        <Style x:Key="StretchContainterStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>



        </Style>
        <DataTemplate x:Key="MessageTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="label" Text="{Binding PartitionId}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,20,0"/>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Message}" VerticalAlignment="Stretch" Grid.Column="1"/>
            </Grid>
        </DataTemplate>

    </Window.Resources>
    <Grid x:Name="rootGrid" DataContext="{Binding Main, Mode=OneWay, Source={StaticResource Locator}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="67*"/>
            <ColumnDefinition Width="181*"/>
            <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="397*"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="55*"/>
        </Grid.RowDefinitions>
        <Button x:Name="stopButton" Content="Stop" HorizontalAlignment="Right" VerticalAlignment="Top" Width="75" Height="20" Grid.Column="1" Grid.Row="4" Command="{Binding EventHub.Stop}"/>
        <Grid Grid.Column="2" Margin="0,20,0,10">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="openButton" Content="Open" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="openButton_Click" Height="20" Grid.Column="4" Grid.Row="1" Grid.ColumnSpan="2" Command="{Binding EventHub.Open}"/>
            <Label x:Name="label" Content="Connection String:" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Label x:Name="label1" Content="Event Hub:" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1"/>
            <TextBox x:Name="txtConnectionString" TextWrapping="Wrap" Grid.Column="2" Text="{Binding EventHub.EventHubConnectionString}" Margin="0,0,0,10"/>
            <TextBox x:Name="txtEventHub" TextWrapping="Wrap" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" Text="{Binding EventHub.HubName}"/>
            <Grid Grid.Column="2" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <GroupBox x:Name="groupBox" Header="CheckPoint:" VerticalAlignment="Top" IsEnabled="{Binding EventHub.IsReading, Converter={StaticResource InverseBoolConverter}}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <RadioButton Tag="Start" GroupName="Checkpoints" Grid.Row="0" x:Name="radioButton" VerticalContentAlignment="Center"  HorizontalAlignment="Left" VerticalAlignment="Top" Checked="checkPoint_Checked" Margin="0,0,0,5">
                            <Label Content="Start of Partition"/>
                        </RadioButton>

                        <RadioButton  Tag="Minutes" GroupName="Checkpoints" VerticalContentAlignment="Center" Grid.Row="1" x:Name="radioButton1" Checked="checkPoint_Checked" Margin="0,0,0,5"   >
                            <StackPanel Orientation="Horizontal" Grid.Row="1">
                                <Label Content="Start "/>
                                <TextBox Text="1" Width="20"/>
                                <Label Content=" Minutes in the Past "/>
                            </StackPanel>
                        </RadioButton>
                        <RadioButton Tag="Messages" GroupName="Checkpoints" VerticalContentAlignment="Center" Grid.Row="2" x:Name="radioButton4" Checked="checkPoint_Checked" Margin="0,0,0,5"   >
                            <StackPanel  Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Center">
                                <Label Content="Start "/>
                                <TextBox Text="1" Width="20"/>
                                <Label Content=" Messages in the Past "/>
                            </StackPanel>
                        </RadioButton>
                        <RadioButton Tag="Now" GroupName="Checkpoints" Grid.Row="3" x:Name="radioButton2"  HorizontalAlignment="Left" VerticalContentAlignment="Center"  VerticalAlignment="Top" IsChecked="True" Checked="checkPoint_Checked" Margin="0,0,0,5">
                            <Label Content="Now" />
                        </RadioButton>
                    </Grid>
                </GroupBox>

            </Grid>
            <CheckBox x:Name="checkBox" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="4" IsChecked="{Binding EventHub.SaveSettings}" Content="Save"/>

        </Grid>
        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1"><Run Text="Partions Message Count: "/><Run Text=" "/><Run Text="{Binding EventHub.TotalMessageCount}"/></TextBlock>
        <ListView x:Name="partitionList" Grid.Row="2" Grid.Column="1" ItemTemplate="{DynamicResource PartitionTemplate}" ItemContainerStyle="{DynamicResource StretchContainterStyle}" SelectionChanged="partitionList_SelectionChanged" ItemsSource="{Binding EventHub.Partitions}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding EventHub.Read}" CommandParameter="{Binding SelectedItem, ElementName=partitionList}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>
        <ProgressBar x:Name="progressBar" Grid.ColumnSpan="4" Height="5" VerticalAlignment="Bottom" IsIndeterminate="True" Visibility="Hidden"/>
        <Button x:Name="openAllButton" Content="Read All" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.Row="4" Grid.Column="1" Command="{Binding EventHub.ReadAll}"/>
        <ListView x:Name="messageList" Grid.Column="2" Grid.Row="2" ItemTemplate="{DynamicResource MessageTemplate}" Margin="20,0,0,0" ItemsSource="{Binding EventHub.Messages}" SelectionChanged="messageList_SelectionChanged">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ShowMessage}" CommandParameter="{Binding SelectedItem, ElementName=messageList}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>
        <TextBlock x:Name="textBlock_Copy" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Messages:" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" Margin="20,0,0,0"/>
        <TextBlock x:Name="textBlock1" HorizontalAlignment="Right" TextWrapping="Wrap"  VerticalAlignment="Top" Grid.Row="4" Grid.Column="2"><Run Text="Messages Received: "/><Run Text=" "/><Run Text="{Binding EventHub.NumberOfMessagesReceived}"/></TextBlock>

    </Grid>
</Window>
